"""
Allow admin to manage last activity.
"""
type LastAdminQuery @use(modules: ["mod_last"]) @protected{
  "Get the user's last status and timestamp"
  getLast(user: JID!): LastActivity
    @use(arg: "user") @protected(type: DOMAIN, args: ["user"])
  "Get the number of users active from the given timestamp"
  countActiveUsers(domain: DomainName!, timestamp: DateTime): Int
    @use(arg: "domain") @protected(type: DOMAIN, args: ["domain"])
  """
  List users that didn't log in the last days or have never logged in.
  Globally or for a specified domain
  """
  listOldUsers(domain: DomainName, timestamp: DateTime!): [OldUser!]
   @use(arg: "domain") @protected(type: DOMAIN, args: ["domain"])
}

"""
Allow admin to get information about last activity.
"""
type LastAdminMutation @use(modules: ["mod_last"]) @protected{
  "Set user's last status and timestamp"
  setLast(user: JID!, timestamp: DateTime, status: String!): LastActivity
    @use(arg: "user") @protected(type: DOMAIN, args: ["user"])
  """
  Delete users that didn't log in the last days or have never logged in.
  Globally or for a specified domain. Please use listOldUsers to check which users will be deleted
  """
  removeOldUsers(domain: DomainName, timestamp: DateTime!): [OldUser!]
    @use(arg: "domain") @protected(type: DOMAIN, args: ["domain"])
}

"""
The user is considered old when never registered activity in `mod_last`, or the latest registered
activity is older than the given timestamp.
"""
type OldUser{
  "The user's JID"
  jid: JID!
  "The latest recorded user activity DateTime"
  timestamp: DateTime
}
